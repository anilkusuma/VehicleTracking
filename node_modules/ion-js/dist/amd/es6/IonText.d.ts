export declare const WHITESPACE_COMMENT1 = -2;
export declare const WHITESPACE_COMMENT2 = -3;
export declare const ESCAPED_NEWLINE = -4;
export declare function is_digit(ch: number): boolean;
export declare function asAscii(s: any): string;
export declare function nextEscape(s: string, prev: number): number;
export declare function needsEscape(c: number): boolean;
export declare function escapeString(s: string, pos: number): string;
export declare function escapeSequence(c: number): string;
export declare function toHex(c: number, len: number): string;
export declare function is_letter(ch: number): boolean;
export declare function is_numeric_terminator(ch: number): boolean;
export declare function is_letter_or_digit(ch: number): boolean;
export declare function is_operator_char(ch: number): boolean;
export declare function is_single_operator_char(ch: number): boolean;
export declare function is_whitespace(ch: number): boolean;
export declare function is_base64_char(ch: number): boolean;
export declare function is_hex_digit(ch: number): boolean;
export declare function toBase64(value: number[]): string;
export declare enum CharCodes {
    NULL = 0,
    BELL = 7,
    BACKSPACE = 8,
    HORIZONTAL_TAB = 9,
    LINE_FEED = 10,
    VERTICAL_TAB = 11,
    FORM_FEED = 12,
    CARRIAGE_RETURN = 13,
    DOUBLE_QUOTE = 34,
    SINGLE_QUOTE = 39,
    FORWARD_SLASH = 47,
    QUESTION_MARK = 63,
    BACKSLASH = 92,
    LEFT_PARENTHESIS,
    RIGHT_PARENTHESIS,
    LEFT_BRACE,
    RIGHT_BRACE,
    LEFT_BRACKET,
    RIGHT_BRACKET,
    COMMA,
    SPACE,
    LOWERCASE_U,
    COLON,
}
export interface EscapeIndex {
    [index: number]: number[];
}
export declare let ClobEscapes: EscapeIndex;
export declare let StringEscapes: EscapeIndex;
export declare let SymbolEscapes: EscapeIndex;
export declare function isIdentifier(s: string): boolean;
export declare function isOperator(s: string): boolean;
export declare function escape(s: string, escapes: EscapeIndex): IterableIterator<number>;
