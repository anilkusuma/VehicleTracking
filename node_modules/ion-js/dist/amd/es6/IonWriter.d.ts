import { Decimal } from "./IonDecimal";
import { Timestamp } from "./IonTimestamp";
import { TypeCodes } from "./IonBinary";
export interface Writer {
    writeBlob(value: number[], annotations?: string[]): void;
    writeBoolean(value: boolean, annotations?: string[]): void;
    writeClob(value: number[], annotations?: string[]): void;
    writeDecimal(value: Decimal, annotations?: string[]): void;
    writeFieldName(fieldName: string): void;
    writeFloat32(value: number, annotations?: string[]): void;
    writeFloat64(value: number, annotations?: string[]): void;
    writeInt(value: number, annotations?: string[]): void;
    writeList(annotations?: string[], isNull?: boolean): void;
    writeNull(type_: TypeCodes, annotations?: string[]): void;
    writeSexp(annotations?: string[], isNull?: boolean): void;
    writeString(value: string, annotations?: string[]): void;
    writeStruct(annotations?: string[], isNull?: boolean): void;
    writeSymbol(value: string, annotations?: string[]): void;
    writeTimestamp(value: Timestamp, annotations?: string[]): void;
    getBytes(): number[];
    close(): void;
    endContainer(): void;
}
