import { Catalog } from "./IonCatalog";
import { Decimal } from "./IonDecimal";
import { IonType } from "./IonType";
import { Reader } from "./IonReader";
import { BinarySpan } from "./IonSpan";
import { Timestamp } from "./IonTimestamp";
export declare class BinaryReader implements Reader {
    private _parser;
    private _cat;
    private _symtab;
    private _raw_type;
    constructor(source: BinarySpan, catalog: Catalog);
    next(): IonType;
    stepIn(): void;
    stepOut(): void;
    valueType(): IonType;
    depth(): number;
    fieldName(): string;
    hasAnnotations(): boolean;
    getAnnotation(index: number): string;
    isNull(): boolean;
    stringValue(): string;
    numberValue(): number;
    byteValue(): number[];
    ionValue(): never;
    booleanValue(): boolean;
    decimalValue(): Decimal;
    timestampValue(): Timestamp;
    value(): any;
    private getSymbolString(symbolId);
}
