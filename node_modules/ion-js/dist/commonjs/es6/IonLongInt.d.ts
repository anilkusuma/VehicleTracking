export declare class LongInt {
    private static readonly zero_bytes;
    private static readonly zero_string;
    private static readonly byte_base;
    private static readonly byte_mask;
    private static readonly byte_shift;
    private static readonly string_base;
    private static readonly char_plus;
    private static readonly char_minus;
    private static readonly char_zero;
    private static readonly char_little_n;
    static NULL: LongInt;
    static ZERO: LongInt;
    private s;
    private d;
    private b;
    constructor(str: string, bytes: number[], signum: number);
    private static _make_zero_array(len);
    private static _make_copy(bytes);
    isNull(): boolean;
    private static _div_d(bytes, digit);
    private static _is_zero_bytes;
    isZero(): boolean;
    isNegativeZero(): boolean;
    private _d();
    private static _add(bytes, v);
    private static _mult(bytes, v);
    private _b();
    numberValue(): number;
    toString(): string;
    digits(): string;
    stringValue(): string;
    byteValue(): number[];
    signum(): number;
    static parse(str: string): LongInt;
    static fromBytes(bytes: number[], signum: number): LongInt;
    static fromNumber(n: number): LongInt;
}
